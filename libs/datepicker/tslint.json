{
  "extends": "../../tslint.json",
  "linterOptions": {
    "exclude": ["!**/*"]
  },
  "rules": {
    "max-line-length": [true, {
      "limit": 100,
      "check-strings": true,
      "check-regex": true,
      "ignore-pattern": "//\\s+https?://"
      }
    ],
    // Disable this flag because of SHA tslint#48b0c597f9257712c7d1f04b55ed0aa60e333f6a
    // TSLint now shows warnings if types for properties are inferred. This rule needs to be
    // disabled because all properties need to have explicit types set to work for Dgeni.
    "no-inferrable-types": false,
    "comment-format": [
      true,
      "check-space"
    ],
    "indent": [
      true,
      "spaces"
    ],
    "eofline": true,
    "no-construct": true,
    "prefer-literal": [true, "object"],
    "no-duplicate-variable": true,
    "no-eval": true,
    "no-arg": true,
    "no-internal-module": true,
    "no-trailing-whitespace": true,
    "no-bitwise": true,
    "no-shadowed-variable": true,
    "no-unused-expression": true,
    "no-unused-variable": true,
    "no-var-keyword": true,
    "member-access": [true, "no-public"],
    "no-debugger": true,
    "one-line": [
      true,
      "check-catch",
      "check-else",
      "check-open-brace",
      "check-whitespace"
    ],
    "quotemark": [
      true,
      "single",
      "avoid-escape"
    ],
    "semicolon": true,
    "typedef-whitespace": [
      true,
      {
        "call-signature": "nospace",
        "index-signature": "nospace",
        "parameter": "nospace",
        "property-declaration": "nospace",
        "variable-declaration": "nospace"
      }
    ],
    "curly": true,
    "variable-name": [
      true,
      "ban-keywords",
      "check-format",
      "allow-leading-underscore",
      "allow-snake-case"
    ],
    "whitespace": [
      true,
      "check-branch",
      "check-decl",
      "check-operator",
      "check-separator",
      "check-type",
      "check-preblock"
    ],
    // Bans jasmine helper functions that will prevent the CI from properly running tests.
    "ban": [
      true,
      ["fit"],
      ["fdescribe"],
      ["xit"],
      ["xdescribe"],
      {"name": ["first"], "message": "Use take(1) instead."},
      {"name": ["Object", "assign"], "message": "Use the spread operator instead."},
      {"name": ["*", "asObservable"], "message": "Cast to Observable type instead."},
      {"name": ["isDevMode"], "message": "Use `typeof ngDevMode === 'undefined' || ngDevMode` instead"}
    ],
    // Avoids inconsistent linebreak styles in source files. Forces developers to use LF linebreaks.
    "linebreak-style": [true, "LF"],
    // Namespaces are not allowed, because of Closure compiler.
    "no-namespace": true,
    "jsdoc-format": [true, "check-multiline-start"],
    "no-duplicate-imports": true,
    "await-promise": [true, "PromiseLike"],
    "array-type": [true, "array"],

    // Codelyzer
    "template-banana-in-box": true,
    "contextual-lifecycle": true,
    "contextual-decorator": true,
    "no-output-on-prefix": true,
    "template-no-negated-async": true,
    "use-lifecycle-interface": true,

    // RxJS
    "rxjs-no-unsafe-takeuntil": true,
    "rxjs-no-unsafe-catch": true,

    // Custom Rules
    "file-name-casing": [true, {
      // Exclude custom lint rule files since they have to always be camel-cased and end
      // with "Rule".
      "\\w+Rule.ts": "camel-case",
      ".*": "kebab-case"
    }],
    // Ensures that all rxjs imports come only from `rxjs` and `rxjs/operators`. Also ensures
    // that no AST utils from `@schematics/angular` are imported. These should be vendored.
    "import-blacklist": [true, ["^@schematics/angular/.*(ast).*", "^rxjs(?!$|/operators$).*"]],

    // Overrides
    "component-class-suffix": false,
    "component-selector": false,
    "directive-class-suffix": false,
    "directive-selector": false,
    "deprecation": false,
    "interface-over-type-literal": false,
    "member-ordering": false,
    "no-host-metadata-property": false,
    "no-input-rename": false,
    "no-inputs-metadata-property": false,
    "no-non-null-assertion": false,
    "no-output-rename": false,
    "no-outputs-metadata-property": false,
    "ordered-imports": false,
    "prefer-const": false,
    "radix": false,
    "triple-equals": false
  }
}
